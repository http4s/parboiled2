Version 2.2.0 (2020-03-02)
--------------------------
- Upgraded ti ScalaJS 1.0.0
- Dropped support for Scala 2.11
- Dropped support for scala-native (for now)


Version 2.1.8 (2019-07-24)
--------------------------
- Fixed compiler warnings on Scala 2.13


Version 2.1.7 (2019-06-21)
--------------------------
- Fixed Base64Parsing for blocks and extra characters (thank you, @rossabaker!)
- Upgraded to scala.js 0.6.28
- Build for Scala 2.13.0 and scala-native 0.3.9


Version 2.1.6 (2019-05-03)
--------------------------
- Upgraded to scala.js 0.6.27
- Upgraded to SBT 1.2.8
- Build for scala-native 0.3.9
- Build for Scala 2.13.0-RC1


Version 2.1.5 (2018-09-14)
--------------------------
- Fixed `valueMap` not matching longest key first (#136)
- Added `valueMap` with `ignoreCase`
- Upgraded to Scala.js 0.6.24
- Build for Scala 2.13.0-M4


Version 2.1.4 (2017-01-24)
--------------------------
- Fixed `andNot` implementation (#167)
- Fixed Scala.js build for Scala 2.12.
- Upgrade to Scala.js 0.6.14


Version 2.1.3 (2016-04-26)
--------------------------
- Added support for Scala.js (thx to Victor Hiairrassary for the patch!)


Version 2.1.2 (2016-02-29)
--------------------------
- Upgraded to shapeless 2.3.0


Version 2.1.1 (2016-02-01)
--------------------------
- Upgraded to Scala 2.11.7 and shapeless 2.2.5
- Fixed `StringIndexOutOfBoundsException` in `ParserInput` (#138)
- Removed left-over `printStackTrace` (#157)
- Enable repetition range definition via val (#153)
- Added OSGi manifests via sbt-osgi plugin


Version 2.1.0 (2015-02-18)
--------------------------
- Upgraded to Scala 2.11.5 and shapeless 2.1.0
- Fixed `Invalid rule definition error` for rule parameter-less methods with type params (#95)
- Fixed result type of certain reduction rules not computed correctly (#100)
- Fixed broken `ByteArrayBasedParserInput::sliceCharArray`
- Added `~!~` operator for "concatenate-with-cut" semantics (#102)
- Added `atomic` rule marker (#112)
- Added `quiet` rule marker
- Added `fail` helper (#125)
- Added `ErrorFormatter` for more flexible parse error rendering
- Added postfix aliases for `optional`, `oneOrMore` and `zeroOrMore` (#111)
- Added `Parser::errorTraceCollectionLimit` (#102)
- Added variance markers to rule type aliases
- Added (unfinished) ScalaParser example based on the one from @lihaoyi
- Added `CsvParser` example (#99)
- Many improvements to default error reporting and formatting logic
- Enabled setting end index in array-based ParserInput implementations


Version 2.0.1 (2014-09-05)
--------------------------
- Fixed ScalaReflectionException under Scala 2.11 when scala-reflect is not on the classpath (#81)
- Increased operator argument limit from 9 to 22 (#85)
- Added `named` rule modifier and `namedRule` helper for explicit naming of inner rules (#50)
- Moved JSON benchmark into dedicated sub-project


Version 2.0.0 (2014-06-16)
--------------------------
- Fixed stack overflow caused by scala issue 8657 (#78)


Version 2.0.0-RC2 (2014-06-03)
------------------------------
- Fixed #72 by introducing `CharPredicate.RangeBasedPredicate`, renamed `CharPredicate.CharMask` to `CharPredicate.MaskBased`
- Fixed #74 by moving parser macro implementations out of Parser companion object
- Removed `charAndValue` and `stringAndValue` implicits due to bad value/risk ratio
- Added test showcasing implicit whitespace matching
- Extended `CharUtils` with more high-performance helpers


Version 2.0.0-RC1 (2014-04-22)
------------------------------
- Added `noneOf` helper (#63)
- Added support for `runSubParser`
- Added `MISMATCH0` rule
- Refactored `DynamicRuleDispatch` for performance and access to `ruleNames` Seq
- Extended `StringBuilding` trait with some more helpers, renamed `append`/`prepend` to `appendSB`/`prependSB`
- Removed `ByteArrayBasedParserInput::charset` member (#59)
- Fixed problems resulting from not-fully-qualified type references (#57, #60)
- Changed scope of `scala-reflect` dependency from `compile` to `provided` (#62)


Version 2.0-M2 (2014-02-07)
---------------------------
- Renamed `CharPredicate.HexAlpha` to `HexDigit`
- Renamed `EMPTY` to `MATCH` and `NOTHING` to `MISMATCH`
- Changed `MISMATCH` type from `Rule0` to `Rule[I, O]`
- Fixed "Invalid rule definition" error with certain actions (#41)
- Fixed "Invalid rule definition" when calling free rule methods (#43)
- Fixed "Identifiers not decoded in error messages' (#44)
- Fixed `ArrayBasedPredicate` not recognizing char at index 0
- Fixed error reporting incorrectly positioning unexpected newline errors
- Added `Parser::charAt(offset)`, `Parser::charAtRC(offset)` and `Parser::lastChar: Char`
- Added `org.parboiled2.util.Base64` codec from pb1
- Added `StringBuilding` and `Base64Parsing` helper traits
- Added `drop` action
- Added `ValueStack::show`
- Added `DynamicRuleDispatch` facility
- Added support for variable `.times` bases (ints and ranges)
- Added support for more `.run` bases (Apply, TypeApply in addition to Select)
- Added support for `Map[String, T]` rules
- Added support for `char -> value` and `string -> value` rules
- Added `ParserInput::sliceCharArray`
- Extended `~>` action function parameter maximum from 5 to 9 (#45)
- Extended `run` action with support for rule expansion
- Extended `run` action with support for value stack consumption (#39)
- Refactored and optimized rule rendering (#47)
- Implemented string literal auto expansion (#46)
- Improved/flexibilized parse error formatting infrastructure
- Improved compilation errors (@implicitNotFound on `TailSwitch`)
- Improved CharPredicate implementation
- Other smaller improvement and polishings


Version 2.0-M1 (2013-12-19)
---------------------------

first public release (of the 2.x series)
